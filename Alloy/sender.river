otelcol.receiver.filelog "audit_only" {
  include  = ["/data/app.log"]
  start_at = "beginning"

  // Recombine pretty-printed JSON objects
  multiline {
    line_start_pattern = "^\\s*\\{"
  }

  operators = [
    // 0) Early filter on raw body. 'filter' DROPS when expr == true,
    // so we negate the "is audit" match to keep only audit.
    {
      type    = "filter",
      expr    = `!(body matches "(?s)\\\"log\\.type\\\"\\s*:\\s*\\\"audit\\\"")`,
      on_error = "send",
    },

    // 1) Parse JSON into body.*
    { type = "json_parser", parse_from = "body", on_error = "send" },

    // 2) Parse event time -> record timestamp (best-effort)
    {
      type       = "time_parser",
      parse_from = "body.timestamp",
      layout     = "%Y-%m-%dT%H:%M:%S.%fZ",
      location   = "UTC",
      on_error   = "send",
    },

    // 3) Parse severity (best-effort)
    { type = "severity_parser", parse_from = "body.severity", on_error = "send" },
  ]

  output { logs = [otelcol.processor.batch.default.input] }
}

otelcol.processor.batch "default" {
  output { logs = [otelcol.exporter.otlp.to_receiver.input] }
}

otelcol.exporter.otlp "to_receiver" {
  client {
    endpoint = "receiver:4317"
    tls { insecure = true }
  }
}
